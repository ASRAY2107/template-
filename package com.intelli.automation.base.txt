package com.intelli.automation.base;

import java.time.Duration;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;

public class DriverSetup {
	
	protected WebDriver driver;
	
	@BeforeMethod
	public void openDriver() {
		
		
		driver = new ChromeDriver();
		
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		
	}
	
	@AfterMethod
	public void closeDriver() {
		if(driver!=null) {
			driver.quit();
		}
	}

}




package com.intelli.automation.tests;

import java.util.ArrayList;

import java.util.Collections;
import java.util.List;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.intelli.automation.base.DriverSetup;
import com.intelli.automation.pages.TableSortPage;
import org.testng.Assert;
public class TableCheckTest extends DriverSetup{
	
	
	
	private TableSortPage p;
	
	
	@BeforeMethod
	public void tableClick() {
		p = new TableSortPage(driver);
		p.tablePage();
	}
	
	
	@Test(priority = 1)
	public void VerifySortingLastNameASC() {
		
		
		
		
		p.LastNameClick();
		List<String> lastNameSort = p.getLastName();
		
		
		List<String> LastCopy = new ArrayList<>(lastNameSort);
		
		
		Collections.sort(LastCopy);
		
		
		Assert.assertEquals(lastNameSort, LastCopy);
		
		
		
	}
	
	@Test(priority = 2)
	public void VerifySortingLastNameDESC() {
		
		
		p.LastNameClick();
		p.LastNameClick();
		List<String> lastNameSort = p.getLastName();
		
		
		List<String> LastCopy = new ArrayList<>(lastNameSort);
		
		
		Collections.sort(LastCopy ,Collections.reverseOrder());
		
		
		Assert.assertEquals(lastNameSort, LastCopy);
		
		
		
	}
	
	
	@Test(priority = 3)
	
	public void firstNameAsc() {
		p.FirstNameClick();
		List<String> firstSort = p.getFirstName();
		
		List<String> FirstNameCopy = new ArrayList<>(firstSort);
		
		Collections.sort(FirstNameCopy);
		
		Assert.assertEquals(firstSort, FirstNameCopy);
	}
	
	
	@Test(priority = 4)
	public void VerifyEmailSorting() {
		p.EmailClick();
		
		List<String> email = p.getEmail();
		
		List<String> emailExpected = new ArrayList<>(email);
		
		Collections.sort(emailExpected);
		
		Assert.assertEquals(email, emailExpected);
	}
	

}



package com.intelli.automation.pages;

import java.util.ArrayList;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

public class TableSortPage {
	
	
	private WebDriver driver;
	
	
	private String base_url = "https://the-internet.herokuapp.com/tables";
	
	
	private By lastName = By.xpath("//*[@id=\"table1\"]/thead/tr/th[1]/span");
	
	
	private By firstName = By.xpath("//*[@id=\"table1\"]/thead/tr/th[2]/span");
	
	private By row = By.xpath("//table[1]//tbody/tr");
	
	
	private By Emailclick = By.xpath("//*[@id=\"table1\"]/thead/tr/th[3]/span");
	
	public TableSortPage(WebDriver driver) {
		this.driver = driver;
	}
	
	
	public void tablePage() {
		driver.get(base_url);
	}
	
	
	
	
	public void LastNameClick() {
		driver.findElement(lastName).click();
	}
	
	
	
	public void FirstNameClick() {
		driver.findElement(firstName).click();
	}
	
	public void EmailClick() {
		driver.findElement(Emailclick).click();
	}
	
	public List<String> getFirstName(){
		List<WebElement> getRows = driver.findElements(row);
		
		List<String>firstNamelist = new ArrayList<>();
		
		for(WebElement r : getRows) {
			String all = r.getText();
			String[] parts = all.split(" ");
			firstNamelist.add(parts[1]);
		}
		
		return firstNamelist;
				
	}
	
	
	public List<String> getLastName(){
		List<WebElement> getRows = driver.findElements(row);
		
		List<String>LastNamelist = new ArrayList<>();
		
		for(WebElement r : getRows) {
			String all = r.getText();
			String[] parts = all.split(" ");
			LastNamelist.add(parts[0]);
		}
		
		return LastNamelist;
				
	}
	
	
	
	
	public List<String> getEmail(){
		List<WebElement> getRows = driver.findElements(row);
		
		List<String>Email_list = new ArrayList<>();
		
		for(WebElement r : getRows) {
			String all = r.getText();
			String[] parts = all.split(" ");
			Email_list.add(parts[2]);
		}
		
		return Email_list;
				
	}
	
	
	
	
	
	
	
}

